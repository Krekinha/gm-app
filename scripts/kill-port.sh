#!/bin/bash

# Script para parar processos em qualquer porta
# Uso: ./kill-port.sh <porta>
# Exemplo: ./kill-port.sh 3000

if [ $# -eq 0 ]; then
    echo "‚ùå Uso: $0 <porta>"
    echo "üìù Exemplo: $0 3000"
    exit 1
fi

PORT=$1

echo "üîç Procurando processos na porta $PORT..."

# Encontrar processos na porta especificada
PROCESSES=$(ss -tulpn | grep ":$PORT ")

if [ -z "$PROCESSES" ]; then
    echo "‚úÖ Nenhum processo encontrado na porta $PORT"
    echo "‚úÖ A porta $PORT est√° livre!"
    exit 0
fi

echo "üìã Processos encontrados na porta $PORT:"
echo "$PROCESSES"
echo ""

# Extrair PIDs dos processos
PIDS=$(echo "$PROCESSES" | grep -o 'pid=[0-9]*' | cut -d'=' -f2)

if [ -z "$PIDS" ]; then
    echo "‚ùå N√£o foi poss√≠vel extrair PIDs dos processos"
    exit 1
fi

echo "üéØ PIDs encontrados: $PIDS"
echo ""

# Confirmar antes de matar
read -p "‚ö†Ô∏è  Deseja parar todos os processos na porta $PORT? (y/N): " -n 1 -r
echo ""

if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üîÑ Parando processos..."
    
    for PID in $PIDS; do
        echo "   üõë Parando processo PID: $PID"
        kill -9 $PID 2>/dev/null
        
        if [ $? -eq 0 ]; then
            echo "   ‚úÖ Processo $PID parado com sucesso"
        else
            echo "   ‚ùå Erro ao parar processo $PID"
        fi
    done
    
    echo ""
    echo "üîç Verificando se a porta est√° livre..."
    sleep 1
    
    # Verificar se ainda h√° processos
    REMAINING=$(ss -tulpn | grep ":$PORT ")
    if [ -z "$REMAINING" ]; then
        echo "‚úÖ Sucesso! A porta $PORT est√° livre!"
    else
        echo "‚ö†Ô∏è  Ainda h√° processos na porta $PORT:"
        echo "$REMAINING"
    fi
else
    echo "‚ùå Opera√ß√£o cancelada"
fi
